# -*- coding: utf-8 -*-
"""IntCoeffFilterFE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OrkWaBt_nhuNb7pURwpFO_f-TF5czMKF
"""

import torch
import numpy as np
import itertools
import time
import matplotlib.pyplot as plt
import collections
from scipy.io import loadmat

"""Loading Dataset"""

from google.colab import drive
drive.mount('/content/drive')

from scipy.io import loadmat
#addpath(fullfile('Desktop'));
raw_data=loadmat('/content/drive/My Drive/SURE2021/GTthrSpike5.mat')

GTaligned=np.array(raw_data['GTthrSpike'])

spike=GTaligned
length=GTaligned.shape[0]

"""Integer Coefficient Filter"""

IntFilSpike=[]
for i in range (GTaligned.shape[0]):
  temp=[]
  for j in range (3,32):
    temp.append(8*GTaligned[i,j]-2*GTaligned[i,j-1]-6*GTaligned[i,j-2]-4*GTaligned[i,j-3])
  IntFilSpike.append(temp)

IntFilSpike=np.array(IntFilSpike)
print(IntFilSpike.shape)

"""Plotting Spikes"""

for i in range(1000):
  plt.plot(IntFilSpike[i,:])

plt.figure()

"""Visualizing Distribution at Each Sample Point"""

import matplotlib.pyplot as plt


for i in range (29):
  
  print(i)
  plt.hist(IntFilSpike[:,i],bins=50)
  plt.xlabel(i)
  plt.show()
  
waveMatrix=IntFilSpike

"""K-means"""

from sklearn.cluster import KMeans
waveMatrix=IntFilSpike
PC=np.concatenate(([IntFilSpike[:,2]],[IntFilSpike[:,8]],[IntFilSpike[:,9]],[IntFilSpike[:,16]]),axis=0) #Index of IntFilSpike is selected based on the time samples that provide the best separation in each dataset
PC=np.transpose(PC)
print(PC.shape)
kmeans = KMeans(n_clusters=3, max_iter=1000).fit(PC)


group=kmeans.labels_
pc11=PC[:,0]
pc22=PC[:,1]
cdict = {0: 'red', 1: 'blue',2:'green'}
fig, ax = plt.subplots()
for g in np.unique(group):
    ix = np.where(group == g)
    ax.scatter(pc11[ix], pc22[ix], c = cdict[g], label = g, s = 10)
ax.legend()
plt.show()